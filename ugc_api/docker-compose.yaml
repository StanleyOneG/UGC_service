version: "3.8"
services:
  logstash:
      image: logstash:7.17.10
      depends_on:
        - elasticsearch
      environment:
        XPACK_MONITORING_ENABLED: "false"
        ES_HOST: "elasticsearch:9200"
      ports:
        - "5044:5044/udp"
      volumes:
        - ./deploy/logstash/logstash.conf:/config/logstash.conf:ro
      command: logstash -f /config/logstash.conf

  elasticsearch:
    image: elasticsearch:7.17.10
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 9200:9200
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data
  # Обратите внимание: не стоит использовать для ELK тот же ES, который задействован для полнотекстового поиска в вашем сервисе

  kibana:
    image: kibana:7.17.10
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  ugc_api:
    build:
      context: ./src
      dockerfile: Dockerfile
    env_file:
      - ./.env
    depends_on:
      redis_ugc:
        condition: service_started
    expose:
      - 8000
    container_name: ugc_api
    volumes:
      - ./src:/ugc_api:ro
    networks:
      - microservice-network
  redis_ugc:
    image: redis:latest
    volumes:
      - redis_ugc_data:/data:rw
    command: >
      --save 60 1
    expose:
      - 6379
    container_name: redis_ugc
    networks:
      - microservice-network

  nginx_ugc:
    image: nginx:1.23.3
    restart: unless-stopped
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:rw
      - ./deploy/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - sprint08_ugc_api_static:/static:ro
    depends_on:
      - ugc_api
    ports:
      - 89:80
    container_name: nginx_ugc
    networks:
      - microservice-network

networks:
  microservice-network:
    name: microservice-network

volumes:
  redis_ugc_data:
  sprint08_ugc_api_static:
